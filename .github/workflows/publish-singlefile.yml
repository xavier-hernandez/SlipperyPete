name: Build & Publish Release

on:
  # only when you push a *git tag* like “v1.2.3”
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# grant write access so create-release/upload-release-asset can actually do its job
permissions:
  contents: write

jobs:
  release:
    # matrix: build on Ubuntu and Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'   # or your target SDK

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish single-file executable
        run: dotnet publish SlipperyPete.sln --configuration Release --runtime ${{ matrix.rid }} --self-contained true /p:PublishSingleFile=true /p:PublishTrimmed=true --output artifacts/${{ matrix.rid }}

      - name: Remove PDB files
        if: runner.os == 'Linux'
        run: find artifacts/${{ matrix.rid }} -type f -name '*.pdb' -delete

      - name: Remove PDB files (Windows)
        if: runner.os == 'Windows'
        run: Remove-Item artifacts\${{ matrix.rid }}\*.pdb -Force

      - name: Zip artifact (Linux)
        if: runner.os == 'Linux'
        run: |
          cd artifacts
          zip -r ${{ matrix.rid }}.zip ${{ matrix.rid }}

      - name: Zip artifact (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Compress-Archive -Path artifacts\${{ matrix.rid }}\* `
                            -DestinationPath artifacts\${{ matrix.rid }}.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:    ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body_path:    CHANGELOG.md
          draft:        false
          prerelease:   false

      # 2) Upload that single ZIP file
      - name: Upload Release Asset (${{ matrix.rid }})
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:        ${{ steps.create_release.outputs.upload_url }}
          asset_path:        artifacts/${{ matrix.rid }}.zip
          asset_name:        ${{ matrix.rid }}-build.zip
          asset_content_type: application/zip